pool:
  vmImage: 'ubuntu-latest'

variables:
  buildConfiguration: 'Release'
  buildPlatform: 'Any CPU'
  GITHUB_TOKEN: $(GITHUB_TOKEN)  # Use the secret GITHUB_TOKEN

stages:
- stage: Build
  displayName: 'Build Stage'
  jobs:
  - job: BuildJob
    displayName: 'Build Job'
    steps:
    - script: |
        sudo apt-get update
        sudo apt-get install -y php-cli
        php -r "copy('https://getcomposer.org/installer', 'composer-setup.php');"
        php composer-setup.php
        php -r "unlink('composer-setup.php');"
        php composer.phar install
      displayName: 'Install PHP and Composer dependencies'
      
    # Ensure that build artifacts are properly archived
    - task: ArchiveFiles@2
      inputs:
        rootFolderOrFile: '$(Build.SourcesDirectory)'
        includeRootFolder: false
        archiveType: 'zip'
        archiveFile: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip'
        replaceExistingArchive: true

    # Publish artifacts to be used in the release stage
    - task: PublishBuildArtifacts@1
      inputs:
        PathtoPublish: '$(Build.ArtifactStagingDirectory)'
        ArtifactName: 'drop'
        publishLocation: 'Container'

- stage: Deploy
  displayName: 'Deploy Stage'
  dependsOn: Build
  jobs:
  - job: DeployJob
    displayName: 'Deploy Job'
    steps:
    - script: |
        sudo apt-get install -y git
        git config --global user.name "michaelakintayo7"
        git config --global user.email "michaelakintayo7@gmail.com"
        
        # Clone the repository's gh-pages branch
        git clone --branch gh-pages https://$(GITHUB_TOKEN):x-oauth-basic@github.com/michaelakintayo7/Group-6-Project.git gh-pages
        
        # Copy the build artifacts to the gh-pages branch
        cp -r $(Build.ArtifactStagingDirectory)/* gh-pages/
        
        # Push changes to the gh-pages branch
        cd gh-pages
        git add --all
        git commit -m "Deploy from Azure Pipelines"
        git push origin gh-pages
      displayName: 'Deploy to GitHub Pages'
      env:
        GITHUB_TOKEN: $(GITHUB_TOKEN)  # Reference the GitHub token set as a secret in Azure Pipelines
